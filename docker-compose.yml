# Docker Compose for Hiking Portal Development
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hiking_portal_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: hiking_portal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: hiking_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d hiking_portal"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: hiking_portal_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: hiking_portal_dev